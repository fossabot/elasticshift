// Code generated by protoc-gen-go.
// source: api/client.proto
// DO NOT EDIT!

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	api/client.proto
	api/repository.proto
	api/team.proto
	api/user.proto

It has these top-level messages:
	CreateClientReq
	CreateClientRes
	DeleteClientReq
	DeleteClientRes
	CreateTeamReq
	CreateTeamRes
	SignUpReq
	SignUpRes
	SignInReq
	SignInRes
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// CreateClientReq is a request to make a client.
type CreateClientReq struct {
	Id           string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Secret       string   `protobuf:"bytes,2,opt,name=secret" json:"secret,omitempty"`
	RedirectUris []string `protobuf:"bytes,3,rep,name=redirect_uris,json=redirectUris" json:"redirect_uris,omitempty"`
	TrustedPeers []string `protobuf:"bytes,4,rep,name=trusted_peers,json=trustedPeers" json:"trusted_peers,omitempty"`
	Public       bool     `protobuf:"varint,5,opt,name=public" json:"public,omitempty"`
	Name         string   `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	LogoUrl      string   `protobuf:"bytes,7,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
}

func (m *CreateClientReq) Reset()                    { *m = CreateClientReq{} }
func (m *CreateClientReq) String() string            { return proto.CompactTextString(m) }
func (*CreateClientReq) ProtoMessage()               {}
func (*CreateClientReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateClientReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateClientReq) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *CreateClientReq) GetRedirectUris() []string {
	if m != nil {
		return m.RedirectUris
	}
	return nil
}

func (m *CreateClientReq) GetTrustedPeers() []string {
	if m != nil {
		return m.TrustedPeers
	}
	return nil
}

func (m *CreateClientReq) GetPublic() bool {
	if m != nil {
		return m.Public
	}
	return false
}

func (m *CreateClientReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateClientReq) GetLogoUrl() string {
	if m != nil {
		return m.LogoUrl
	}
	return ""
}

// CreateClientResp returns the response from creating a client.
type CreateClientRes struct {
	AlreadyExists bool     `protobuf:"varint,1,opt,name=already_exists,json=alreadyExists" json:"already_exists,omitempty"`
	Id            string   `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Secret        string   `protobuf:"bytes,3,opt,name=secret" json:"secret,omitempty"`
	RedirectUris  []string `protobuf:"bytes,4,rep,name=redirect_uris,json=redirectUris" json:"redirect_uris,omitempty"`
	TrustedPeers  []string `protobuf:"bytes,5,rep,name=trusted_peers,json=trustedPeers" json:"trusted_peers,omitempty"`
	Public        bool     `protobuf:"varint,6,opt,name=public" json:"public,omitempty"`
	Name          string   `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	LogoUrl       string   `protobuf:"bytes,8,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
}

func (m *CreateClientRes) Reset()                    { *m = CreateClientRes{} }
func (m *CreateClientRes) String() string            { return proto.CompactTextString(m) }
func (*CreateClientRes) ProtoMessage()               {}
func (*CreateClientRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateClientRes) GetAlreadyExists() bool {
	if m != nil {
		return m.AlreadyExists
	}
	return false
}

func (m *CreateClientRes) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateClientRes) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *CreateClientRes) GetRedirectUris() []string {
	if m != nil {
		return m.RedirectUris
	}
	return nil
}

func (m *CreateClientRes) GetTrustedPeers() []string {
	if m != nil {
		return m.TrustedPeers
	}
	return nil
}

func (m *CreateClientRes) GetPublic() bool {
	if m != nil {
		return m.Public
	}
	return false
}

func (m *CreateClientRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateClientRes) GetLogoUrl() string {
	if m != nil {
		return m.LogoUrl
	}
	return ""
}

// DeleteClientReq is a request to delete a client.
type DeleteClientReq struct {
	// The ID of the client.
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
}

func (m *DeleteClientReq) Reset()                    { *m = DeleteClientReq{} }
func (m *DeleteClientReq) String() string            { return proto.CompactTextString(m) }
func (*DeleteClientReq) ProtoMessage()               {}
func (*DeleteClientReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DeleteClientReq) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

// DeleteClientResp determines if the.
type DeleteClientRes struct {
	NotFound bool `protobuf:"varint,1,opt,name=not_found,json=notFound" json:"not_found,omitempty"`
}

func (m *DeleteClientRes) Reset()                    { *m = DeleteClientRes{} }
func (m *DeleteClientRes) String() string            { return proto.CompactTextString(m) }
func (*DeleteClientRes) ProtoMessage()               {}
func (*DeleteClientRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeleteClientRes) GetNotFound() bool {
	if m != nil {
		return m.NotFound
	}
	return false
}

func init() {
	proto.RegisterType((*CreateClientReq)(nil), "api.CreateClientReq")
	proto.RegisterType((*CreateClientRes)(nil), "api.CreateClientRes")
	proto.RegisterType((*DeleteClientReq)(nil), "api.DeleteClientReq")
	proto.RegisterType((*DeleteClientRes)(nil), "api.DeleteClientRes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Client service

type ClientClient interface {
	Create(ctx context.Context, in *CreateClientReq, opts ...grpc.CallOption) (*CreateClientRes, error)
	Delete(ctx context.Context, in *DeleteClientReq, opts ...grpc.CallOption) (*DeleteClientRes, error)
}

type clientClient struct {
	cc *grpc.ClientConn
}

func NewClientClient(cc *grpc.ClientConn) ClientClient {
	return &clientClient{cc}
}

func (c *clientClient) Create(ctx context.Context, in *CreateClientReq, opts ...grpc.CallOption) (*CreateClientRes, error) {
	out := new(CreateClientRes)
	err := grpc.Invoke(ctx, "/api.Client/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientClient) Delete(ctx context.Context, in *DeleteClientReq, opts ...grpc.CallOption) (*DeleteClientRes, error) {
	out := new(DeleteClientRes)
	err := grpc.Invoke(ctx, "/api.Client/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Client service

type ClientServer interface {
	Create(context.Context, *CreateClientReq) (*CreateClientRes, error)
	Delete(context.Context, *DeleteClientReq) (*DeleteClientRes, error)
}

func RegisterClientServer(s *grpc.Server, srv ClientServer) {
	s.RegisterService(&_Client_serviceDesc, srv)
}

func _Client_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateClientReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Client/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServer).Create(ctx, req.(*CreateClientReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Client_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClientReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Client/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServer).Delete(ctx, req.(*DeleteClientReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Client_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Client",
	HandlerType: (*ClientServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Client_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Client_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/client.proto",
}

func init() { proto.RegisterFile("api/client.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 399 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x6e, 0xd3, 0x30,
	0x18, 0xc7, 0x95, 0xa4, 0x4d, 0x53, 0x8b, 0xb6, 0xc8, 0x82, 0xca, 0x14, 0x84, 0xaa, 0x20, 0xa4,
	0x8a, 0x43, 0x22, 0xe0, 0xc6, 0xb5, 0x80, 0x84, 0xb8, 0xa0, 0x88, 0x9e, 0x23, 0x37, 0xf9, 0xa8,
	0x2c, 0x19, 0x3b, 0xd8, 0x0e, 0x02, 0x4d, 0xbb, 0xec, 0x15, 0xf6, 0x18, 0x7b, 0x93, 0x5d, 0xf7,
	0x0a, 0x7b, 0x81, 0xbd, 0xc1, 0x14, 0xc7, 0xeb, 0xb6, 0x36, 0xab, 0x76, 0xcb, 0xf7, 0xcb, 0x3f,
	0x9f, 0xf3, 0xf3, 0xf7, 0xa1, 0xa7, 0xb4, 0x62, 0x69, 0xc1, 0x19, 0x08, 0x93, 0x54, 0x4a, 0x1a,
	0x89, 0x03, 0x5a, 0xb1, 0xd9, 0xab, 0x8d, 0x94, 0x1b, 0x0e, 0x69, 0xf3, 0x96, 0x0a, 0x21, 0x0d,
	0x35, 0x4c, 0x0a, 0xdd, 0x46, 0xe2, 0x73, 0x0f, 0x4d, 0x96, 0x0a, 0xa8, 0x81, 0xa5, 0xfd, 0x32,
	0x83, 0x3f, 0x78, 0x8c, 0x7c, 0x56, 0x12, 0x6f, 0xee, 0x2d, 0x86, 0x99, 0xcf, 0x4a, 0x3c, 0x45,
	0xa1, 0x86, 0x42, 0x81, 0x21, 0xbe, 0x65, 0xae, 0xc2, 0x6f, 0xd0, 0x48, 0x41, 0xc9, 0x14, 0x14,
	0x26, 0xaf, 0x15, 0xd3, 0x24, 0x98, 0x07, 0x8b, 0x61, 0xf6, 0xe4, 0x06, 0xae, 0x14, 0xd3, 0x4d,
	0xc8, 0xa8, 0x5a, 0x1b, 0x28, 0xf3, 0x0a, 0x40, 0x69, 0xd2, 0x6b, 0x43, 0x0e, 0xfe, 0x68, 0x58,
	0x73, 0x42, 0x55, 0xaf, 0x39, 0x2b, 0x48, 0x7f, 0xee, 0x2d, 0xa2, 0xcc, 0x55, 0x18, 0xa3, 0x9e,
	0xa0, 0xbf, 0x81, 0x84, 0xf6, 0x5c, 0xfb, 0x8c, 0x5f, 0xa0, 0x88, 0xcb, 0x8d, 0xcc, 0x6b, 0xc5,
	0xc9, 0xc0, 0xf2, 0x41, 0x53, 0xaf, 0x14, 0x8f, 0xaf, 0xf6, 0x64, 0x34, 0x7e, 0x8b, 0xc6, 0x94,
	0x2b, 0xa0, 0xe5, 0xff, 0x1c, 0xfe, 0x31, 0x6d, 0xb4, 0x15, 0x8b, 0xb2, 0x91, 0xa3, 0x5f, 0x2c,
	0x74, 0xce, 0x7e, 0x87, 0x73, 0x70, 0xd8, 0xb9, 0xf7, 0x18, 0xe7, 0xfe, 0x41, 0xe7, 0xb0, 0xd3,
	0x79, 0xf0, 0x80, 0x73, 0x74, 0xdf, 0x39, 0x41, 0x93, 0xcf, 0xc0, 0xe1, 0xee, 0xfc, 0x5e, 0xa2,
	0x61, 0xbb, 0x06, 0xf9, 0x76, 0x8c, 0x51, 0x0b, 0xbe, 0x95, 0xfb, 0x79, 0xdd, 0xe4, 0x85, 0x34,
	0xf9, 0x2f, 0x59, 0x8b, 0xd2, 0xdd, 0x4e, 0x24, 0xa4, 0xf9, 0xda, 0xd4, 0x1f, 0xce, 0x3c, 0x14,
	0xb6, 0x51, 0xfc, 0x1d, 0x85, 0xed, 0xed, 0xe2, 0x67, 0x09, 0xad, 0x58, 0xb2, 0xb3, 0x37, 0xb3,
	0x2e, 0xaa, 0xe3, 0xe7, 0x27, 0x17, 0x97, 0xa7, 0xfe, 0x24, 0x46, 0xe9, 0xdf, 0xf7, 0x6e, 0x3d,
	0x3f, 0x79, 0xef, 0xf0, 0x4f, 0x14, 0xb6, 0xff, 0xe1, 0x9a, 0xed, 0x48, 0xcc, 0xba, 0xa8, 0x8e,
	0x5f, 0xdb, 0x66, 0x04, 0x4f, 0x6f, 0x9b, 0xa5, 0x47, 0x5b, 0xd9, 0xe3, 0x75, 0x68, 0xb7, 0xfa,
	0xe3, 0x75, 0x00, 0x00, 0x00, 0xff, 0xff, 0x17, 0xba, 0x2a, 0x6e, 0x0c, 0x03, 0x00, 0x00,
}
