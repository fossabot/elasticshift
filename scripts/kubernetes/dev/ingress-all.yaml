apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress
spec:
  # type: LoadBalancer
  type: NodePort
  ports:
    - port: 80
      # targetPort: 80
      # nodePort: 30080 
      name: http
    - port: 443
      # targetPort: 443
      # nodePort: 30443
      name: https
  selector:
    k8s-app: nginx-ingress-lb
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx-ingress-controller
spec:
  replicas: 2
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        k8s-app: nginx-ingress-lb
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - name: nginx-ingress-controller
          # image: gcr.io/google_containers/nginx-ingress-controller:0.8.3
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.19.0
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
              # port: 30081
              scheme: HTTP
          livenessProbe:
            httpGet:
              path: /healthz
              # port: 30081
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 5
          args:
            - /nginx-ingress-controller
            - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
            - --default-ssl-certificate=$(POD_NAMESPACE)/tls-certificate
          # Use downward API
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 80
            - containerPort: 443
          volumeMounts:
            - name: tls-elasticshift-vol
              mountPath: /etc/nginx-ssl/elasticshift
            # - name: nginx-template-volume
            #   mountPath: /etc/nginx/template
            #   readOnly: true
      volumes:
        - name: tls-elasticshift-vol
          secret:
            secretName: tls-certificate
        # - name: nginx-template-volume
        #   configMap:
        #     name: nginx-template
        #     items:
        #     - key: nginx.tmpl
        #       path: nginx.tmpl
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: elasticshift.com
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  backend:
    serviceName: default-http-backend
    servicePort: 80
  rules:
  - host: elasticshift.com
    http:
      paths:
      - path: /
        backend:
          serviceName: elasticshift-frontend
          servicePort: 8080
  - host: api.elasticshift.com
    http:
      paths:
      - path: /
        backend:
          serviceName: elasticshift-api
          servicePort: 9100
  - host: storage.elasticshift.com
    http:
      paths:
      - path: /
        backend:
          serviceName: minio
          servicePort: 30380
